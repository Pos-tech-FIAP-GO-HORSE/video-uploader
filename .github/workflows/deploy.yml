name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload Lambda Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lambda-jar
          path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Lambda Artifact
        uses: actions/download-artifact@v4
        with:
          name: lambda-jar

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create S3 bucket if it doesn't exist
        run: |
          aws s3api head-bucket --bucket ${{ secrets.S3_BUCKET_NAME }} 2>/dev/null || \
          aws s3api create-bucket --bucket ${{ secrets.S3_BUCKET_NAME }} --region us-east-1

      - name: Upload jar to S3
        run: |
          JAR_FILE=$(ls lambda-jar/*.jar | head -n 1)
          aws s3 cp $JAR_FILE s3://${{ secrets.S3_BUCKET_NAME }}/lambda-artifacts/

      - name: Deploy Lambda Function from S3
        run: |
          JAR_FILE=$(ls lambda-jar/*.jar | head -n 1)
          FILE_NAME=$(basename $JAR_FILE)
          aws lambda update-function-code \
            --function-name process-video-lambda \
            --s3-bucket ${{ secrets.S3_BUCKET_NAME }} \
            --s3-key lambda-artifacts/$FILE_NAME
