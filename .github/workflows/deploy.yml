name: Build and Deploy Lambda

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Upload Lambda Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lambda-jar
          path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Download Lambda Artifact
        uses: actions/download-artifact@v4
        with:
          name: lambda-jar
          path: lambda-jar

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Cria bucket se não existir
        run: |
          BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}
          aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null || \
          aws s3api create-bucket --bucket "$BUCKET_NAME" --region us-east-1

      - name: Descobrir nome do .jar
        id: jar
        run: |
          JAR_FILE=$(ls lambda-jar/*.jar | head -n 1)
          echo "jar=$JAR_FILE" >> $GITHUB_OUTPUT

      - name: Upload .jar para S3
        run: |
          aws s3 cp "${{ steps.jar.outputs.jar }}" s3://${{ secrets.S3_BUCKET_NAME }}/lambda-artifacts/

      - name: Atualizar função Lambda usando código do S3
        run: |
          aws lambda update-function-code \
            --function-name process-video-lambda \
            --s3-bucket ${{ secrets.S3_BUCKET_NAME }} \
            --s3-key lambda-artifacts/$(basename "${{ steps.jar.outputs.jar }}")
