plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'br.com.postech.videouploader'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation("com.amazonaws:aws-lambda-java-core:1.2.2")
    implementation("com.amazonaws:aws-lambda-java-events:3.11.0")
    implementation("software.amazon.awssdk:s3:2.20.0") // AWS SDK para S3
    implementation("org.jetbrains.kotlin:kotlin-stdlib")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa") // Para persistência no banco de dados
    implementation("org.springframework.boot:spring-boot-starter-web")
    runtimeOnly("com.h2database:h2") // Banco de dados em memória para testes

    // Dependências para testes
    testImplementation("org.springframework.boot:spring-boot-starter-test") // Testes Spring Boot
    testImplementation("org.mockito:mockito-core:5.5.0") // Mockito para mocks
    testImplementation("org.mockito.kotlin:mockito-kotlin:5.0.0") // Mockito para Kotlin
    testImplementation("org.junit.jupiter:junit-jupiter:5.10.0") // JUnit 5 para testes unitários
    testImplementation("org.springframework:spring-test") // Suporte para testes Spring
}

tasks.withType(Jar) {
    manifest {
        attributes 'Main-Class': 'com.example.LambdaHandler' // Classe principal do Lambda
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
